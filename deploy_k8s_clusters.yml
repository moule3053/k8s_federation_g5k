- hosts: all
  become: yes
  tasks:
  - name: Remove swapfile from /etc/fstab
    mount:
      name: swap
      fstype: swap
      state: absent

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: set up authorized keys for root user
    authorized_key: user=root key="{{item}}"
    with_file:
      - ~/.ssh/id_rsa.pub

  - name: Assign inventory name to unconfigured hostnames (non-CoreOS, Suse and ClearLinux)
    hostname:
      name: "{{ inventory_hostname }}"

  - name: "Add IP address of all hosts to all hosts"
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: "{{ hostvars[item].ansible_host }} {{item}}"
      state: present
    when: hostvars[item].ansible_host is defined
    with_items: "{{ groups.all }}"

  - name: install remote apt deps
    apt:
     name: "{{ item }}"
     state: present
    with_items:
     - apt-transport-https
     - ca-certificates
     - gnupg2
     - software-properties-common

  - name: add Docker apt-key
    apt_key:
     url: https://download.docker.com/linux/debian/gpg
     state: present

  - name: add Docker's APT repository
    apt_repository:
     repo: deb https://download.docker.com/linux/debian stretch stable
     state: present
     filename: 'docker'

  - name: install Docker
    apt:
     name: docker-ce
     state: present
     update_cache: true

  - name: add Kubernetes apt-key
    apt_key:
     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
     state: present

  - name: add Kubernetes' APT repository
    apt_repository:
     repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
     state: present
     filename: 'kubernetes'

  - name: install kubelet
    apt:
     name: kubelet=1.14.0-00
     state: present
     update_cache: true

  - name: install kubeadm
    apt:
     name: kubeadm=1.14.0-00
     state: present
- hosts: all[0]
  become: yes
  tasks:
   - name: install kubectl
     apt:
       name: kubectl=1.14.0-00
       state: present
       force: yes

- hosts: all[0]
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16

    - name: create .kube directory
      become: yes
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/root/.kube/config
        remote_src: yes
        owner: root

    - name: install Pod network
      become: yes
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml

- hosts: all[0]
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- hosts: all[1:]
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars[groups['all'][0]].join_command }}"
